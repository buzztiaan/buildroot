#!/bin/sh

stock_kernel="3.0.8-g448a95f"
stock_kexec_modules="/lib/modules/${stock_kernel}/kernel/"
stock_fw="etc/firmware/ti-connectivity"
kernel_version=$(uname -r)

#
# Needs proc and sys mounted, /etc/init.d/networking will
# take care of the rest.
#
start_wlan() {
	retries=30

	if [ ! -f /etc/wpa_supplicant.conf ]; then
		echo "No /etc/wpa_supplicant.conf, not starting WLAN"
		return
	fi

	if [ "${kernel_version}" == "${stock_kernel}" ]; then
		mount -t tmpfs none /var/run
		mount -t tmpfs none /lib/firmware
		mkdir -p /lib/firmware/ti-connectivity
		mount -o ro /dev/mmcblk1p20 /mnt
		cp /mnt/${stock_fw}/wl1271-nvs.bin \
			/lib/firmware/ti-connectivity/
		cp /mnt/${stock_fw}/wl128x-fw-multirole-*.bin \
			/lib/firmware/ti-connectivity/
		insmod /mnt/lib/modules/lib80211.ko
		insmod /mnt/lib/modules/cfg80211.ko
		insmod /mnt/lib/modules/mac80211.ko
		insmod /mnt/lib/modules/wl12xx.ko
		insmod /mnt/lib/modules/wl12xx_sdio.ko
		umount /mnt
	fi

	wpa_supplicant -iwlan0 -c /etc/wpa_supplicant.conf > /var/run/wpa_supplicant 2>&1 &

	# prevent udhcpc from timing out before wpa_supplicant is done
	while [ "${retries}" -gt "0" ]; do
		if ! grep "wlan0: Associated with" /var/run/wpa_supplicant; then
			retries=$((retries - 1))
			echo "waiting max ${retries}s more to associate with access point.."
			sleep 1
		else
			return
		fi
	done
}

case "$1" in
  start)
	echo "Loading droid4 stock kernel WLAN modules..."
	start_wlan
	;;
  stop)
        ;;
  restart|reload)
	;;
  *)
	echo "Usage: $0 {start|stop|restart}"
	exit 1
esac

exit $?
